"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[838],{1403:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"PYTHON_VERSION_SETUP","title":"Python Version Management","description":"This document explains how to properly set up Python 3.12+ for this project and avoid common issues with pre-commit and linting tools.","source":"@site/docs/PYTHON_VERSION_SETUP.md","sourceDirName":".","slug":"/PYTHON_VERSION_SETUP","permalink":"/libriscribe2/docs/PYTHON_VERSION_SETUP","draft":false,"unlisted":false,"editUrl":"https://github.com/guerra2fernando/libriscribe2/tree/main/docs/docs/PYTHON_VERSION_SETUP.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Website","permalink":"/libriscribe2/docs/"}}');var t=s(4848),r=s(8453);const l={},o="Python Version Management",c={},h=[{value:"\ud83c\udfaf Requirements",id:"-requirements",level:2},{value:"\ud83d\ude80 Quick Setup",id:"-quick-setup",level:2},{value:"1. Install Python 3.12",id:"1-install-python-312",level:3},{value:"2. Verify Python Installation",id:"2-verify-python-installation",level:3},{value:"3. Set Up Project Environment",id:"3-set-up-project-environment",level:3},{value:"\ud83d\udd27 Linting and Code Quality",id:"-linting-and-code-quality",level:2},{value:"Using Hatch Scripts (Recommended)",id:"using-hatch-scripts-recommended",level:3},{value:"Using Pre-commit (Alternative)",id:"using-pre-commit-alternative",level:3},{value:"\ud83d\udea8 Common Issues and Solutions",id:"-common-issues-and-solutions",level:2},{value:"Issue: Pre-commit uses wrong Python version",id:"issue-pre-commit-uses-wrong-python-version",level:3},{value:"Issue: Virtualenv compatibility errors",id:"issue-virtualenv-compatibility-errors",level:3},{value:"Issue: Different Python versions on different systems",id:"issue-different-python-versions-on-different-systems",level:3},{value:"\ud83d\udccb Best Practices",id:"-best-practices",level:2},{value:"\u2705 Do&#39;s",id:"-dos",level:3},{value:"\u274c Don&#39;ts",id:"-donts",level:3},{value:"\ud83d\udd04 Migration Guide",id:"-migration-guide",level:2},{value:"\ud83d\udee0\ufe0f Troubleshooting",id:"\ufe0f-troubleshooting",level:2},{value:"Check Available Python Versions",id:"check-available-python-versions",level:3},{value:"Manual Python Version Check",id:"manual-python-version-check",level:3},{value:"Reset Pre-commit Cache",id:"reset-pre-commit-cache",level:3},{value:"Verify Hatch Environment",id:"verify-hatch-environment",level:3},{value:"\ud83d\udcda Additional Resources",id:"-additional-resources",level:2}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"python-version-management",children:"Python Version Management"})}),"\n",(0,t.jsx)(e.p,{children:"This document explains how to properly set up Python 3.12+ for this project and avoid common issues with pre-commit and linting tools."}),"\n",(0,t.jsx)(e.h2,{id:"-requirements",children:"\ud83c\udfaf Requirements"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Python 3.12 or higher"}),"\n",(0,t.jsx)(e.li,{children:"uv (for dependency management)"}),"\n",(0,t.jsx)(e.li,{children:"hatch (for project management)"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"-quick-setup",children:"\ud83d\ude80 Quick Setup"}),"\n",(0,t.jsx)(e.h3,{id:"1-install-python-312",children:"1. Install Python 3.12"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Ubuntu/Debian:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo apt update\nsudo apt install python3.12 python3.12-venv python3.12-pip\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"macOS:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"brew install python@3.12\n"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Windows:"}),"\nDownload from ",(0,t.jsx)(e.a,{href:"https://www.python.org/downloads/",children:"python.org"})]}),"\n",(0,t.jsx)(e.h3,{id:"2-verify-python-installation",children:"2. Verify Python Installation"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"python3.12 --version\n# Should output: Python 3.12.x\n"})}),"\n",(0,t.jsx)(e.h3,{id:"3-set-up-project-environment",children:"3. Set Up Project Environment"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Install uv if not already installed\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n\n# Create and activate virtual environment\nuv venv\nsource .venv/bin/activate  # Linux/macOS\n# or\n.venv\\Scripts\\activate     # Windows\n\n# Install dependencies\nuv pip install -e .\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-linting-and-code-quality",children:"\ud83d\udd27 Linting and Code Quality"}),"\n",(0,t.jsx)(e.h3,{id:"using-hatch-scripts-recommended",children:"Using Hatch Scripts (Recommended)"}),"\n",(0,t.jsx)(e.p,{children:"The project includes comprehensive linting scripts that work with the correct Python version:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Check Python version first\nhatch run check-python\n\n# Run all linting checks\nhatch run lint-all\n\n# Fix formatting issues\nhatch run lint-fix\n\n# Run security checks\nhatch run security\n\n# Check for dead code\nhatch run dead-code\n"})}),"\n",(0,t.jsx)(e.h3,{id:"using-pre-commit-alternative",children:"Using Pre-commit (Alternative)"}),"\n",(0,t.jsx)(e.p,{children:"If you prefer pre-commit hooks:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Install pre-commit with Python 3.12\npython3.12 -m pip install pre-commit\n\n# Install the git hooks\npre-commit install\n\n# Run on all files\npre-commit run --all-files\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-common-issues-and-solutions",children:"\ud83d\udea8 Common Issues and Solutions"}),"\n",(0,t.jsx)(e.h3,{id:"issue-pre-commit-uses-wrong-python-version",children:"Issue: Pre-commit uses wrong Python version"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Symptoms:"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Virtualenv creation errors"}),"\n",(0,t.jsx)(e.li,{children:"Python 3.8 being used instead of 3.12"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Use hatch scripts instead"})," (recommended)"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Install pre-commit with Python 3.12:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"python3.12 -m pip install pre-commit\n"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Set PYTHONPATH environment variable:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"export PYTHONPATH=$(which python3.12)\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"issue-virtualenv-compatibility-errors",children:"Issue: Virtualenv compatibility errors"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Symptoms:"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"TypeError: canonicalize_version() got an unexpected keyword argument"})}),"\n",(0,t.jsx)(e.li,{children:"Virtualenv creation fails"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Use the project's virtual environment:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"source .venv/bin/activate\npre-commit run --all-files\n"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Use hatch scripts"})," (they handle this automatically)"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"issue-different-python-versions-on-different-systems",children:"Issue: Different Python versions on different systems"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Solution:"})," The ",(0,t.jsx)(e.code,{children:"scripts/ensure_python_version.py"})," script automatically detects and uses the best available Python version."]}),"\n",(0,t.jsx)(e.h2,{id:"-best-practices",children:"\ud83d\udccb Best Practices"}),"\n",(0,t.jsx)(e.h3,{id:"-dos",children:"\u2705 Do's"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Use ",(0,t.jsx)(e.code,{children:"hatch run"})," commands for consistent environment"]}),"\n",(0,t.jsxs)(e.li,{children:["Run ",(0,t.jsx)(e.code,{children:"hatch run check-python"})," before linting"]}),"\n",(0,t.jsx)(e.li,{children:"Keep Python 3.12+ as the minimum requirement"}),"\n",(0,t.jsx)(e.li,{children:"Use uv for dependency management"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"-donts",children:"\u274c Don'ts"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Don't hardcode Python paths in configuration files"}),"\n",(0,t.jsx)(e.li,{children:"Don't rely on system Python for development"}),"\n",(0,t.jsx)(e.li,{children:"Don't use Python versions below 3.12"}),"\n",(0,t.jsx)(e.li,{children:"Don't mix different Python version managers"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"-migration-guide",children:"\ud83d\udd04 Migration Guide"}),"\n",(0,t.jsx)(e.p,{children:"If you're coming from a different setup:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Remove old virtual environments:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"rm -rf venv/ .venv/ env/\n"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Install Python 3.12+"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Set up with uv:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"uv venv\nuv pip install -e .\n"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Test the setup:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"hatch run check-python\nhatch run lint-all\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\ufe0f-troubleshooting",children:"\ud83d\udee0\ufe0f Troubleshooting"}),"\n",(0,t.jsx)(e.h3,{id:"check-available-python-versions",children:"Check Available Python Versions"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"python scripts/ensure_python_version.py\n"})}),"\n",(0,t.jsx)(e.h3,{id:"manual-python-version-check",children:"Manual Python Version Check"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"python3.12 --version\npython3.11 --version\npython3.10 --version\npython3 --version\n"})}),"\n",(0,t.jsx)(e.h3,{id:"reset-pre-commit-cache",children:"Reset Pre-commit Cache"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"pre-commit clean\nrm -rf ~/.cache/pre-commit\n"})}),"\n",(0,t.jsx)(e.h3,{id:"verify-hatch-environment",children:"Verify Hatch Environment"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"hatch env show\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-additional-resources",children:"\ud83d\udcda Additional Resources"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://docs.python.org/3.12/",children:"Python 3.12 Documentation"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://docs.astral.sh/uv/",children:"uv Documentation"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://hatch.pypa.io/",children:"hatch Documentation"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://pre-commit.com/",children:"Pre-commit Documentation"})}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(n){const e=i.useContext(r);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);