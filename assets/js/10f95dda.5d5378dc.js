"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[953],{7469:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"development/SCRIPTS","title":"Development Scripts","description":"This document describes the available scripts for development and maintenance of the LibriScribe2 project.","source":"@site/docs/development/SCRIPTS.md","sourceDirName":"development","slug":"/development/SCRIPTS","permalink":"/libriscribe2/docs/development/SCRIPTS","draft":false,"unlisted":false,"editUrl":"https://github.com/guerra2fernando/libriscribe2/tree/main/docs/docs/development/SCRIPTS.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Best Practices","permalink":"/libriscribe2/docs/development/BEST_PRACTICES"},"next":{"title":"AI Testing and Mock System Best Practices","permalink":"/libriscribe2/docs/development/ai-testing-best-practices"}}');var t=i(4848),r=i(8453);const c={},o="Development Scripts",d={},l=[{value:"Updating Documentation Dependencies",id:"updating-documentation-dependencies",level:2},{value:"Building the Documentation",id:"building-the-documentation",level:2},{value:"Finding Mock Files from LLM Error Logs",id:"finding-mock-files-from-llm-error-logs",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"development-scripts",children:"Development Scripts"})}),"\n",(0,t.jsx)(n.p,{children:"This document describes the available scripts for development and maintenance of the LibriScribe2 project."}),"\n",(0,t.jsx)(n.h2,{id:"updating-documentation-dependencies",children:"Updating Documentation Dependencies"}),"\n",(0,t.jsx)(n.p,{children:"To update the npm dependencies for the Docusaurus documentation site, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"hatch run docs:update-deps\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This script is a convenient wrapper around ",(0,t.jsx)(n.code,{children:"npm update"})," and is defined in ",(0,t.jsx)(n.code,{children:"pyproject.toml"}),". It executes the ",(0,t.jsx)(n.code,{children:"scripts/update_docs_deps.sh"})," script."]}),"\n",(0,t.jsx)(n.h2,{id:"building-the-documentation",children:"Building the Documentation"}),"\n",(0,t.jsxs)(n.p,{children:["To build the documentation locally, you can use the ",(0,t.jsx)(n.code,{children:"build_docs.sh"})," script:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scripts/build_docs.sh\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This will install the necessary npm dependencies and build the Docusaurus site. The output will be in the ",(0,t.jsx)(n.code,{children:"docs/build"})," directory."]}),"\n",(0,t.jsx)(n.h2,{id:"finding-mock-files-from-llm-error-logs",children:"Finding Mock Files from LLM Error Logs"}),"\n",(0,t.jsxs)(n.p,{children:["When a test that uses ",(0,t.jsx)(n.code,{children:"wiremock"})," fails due to an LLM error, an ",(0,t.jsx)(n.code,{children:"llm_error_exchange_*.log"})," file is created. This log file contains the input and output of the failed LLM call."]}),"\n",(0,t.jsxs)(n.p,{children:["To find the specific ",(0,t.jsx)(n.code,{children:"mock_*.json"})," and ",(0,t.jsx)(n.code,{children:"body_*.json"})," files that were used in the failed call, you can use the ",(0,t.jsx)(n.code,{children:"find_mock_files_from_llm_error.sh"})," script. This is useful for cleaning up the mock files after a failed test run."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scripts/find_mock_files_from_llm_error.sh <path_to_llm_error_exchange_log>\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scripts/find_mock_files_from_llm_error.sh logs/llm_error_exchange_1678886400_abcdef12.log\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will print the paths of the mock files found in the log, which can then be used for cleanup."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var s=i(6540);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);