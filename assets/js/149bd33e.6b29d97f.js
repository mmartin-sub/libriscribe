"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[566],{2556:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"development/timestamp-standards","title":"Timestamp Standards in LibriScribe2","description":"Overview","source":"@site/docs/development/timestamp-standards.md","sourceDirName":"development","slug":"/development/timestamp-standards","permalink":"/libriscribe2/docs/development/timestamp-standards","draft":false,"unlisted":false,"editUrl":"https://github.com/guerra2fernando/libriscribe2/tree/main/docs/docs/development/timestamp-standards.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LLM Client Architecture and Recent Improvements","permalink":"/libriscribe2/docs/development/llm-client-architecture"},"next":{"title":"Exception Handling Improvements","permalink":"/libriscribe2/docs/exception_handling_improvements"}}');var t=n(4848),l=n(8453);const r={},a="Timestamp Standards in LibriScribe2",o={},d=[{value:"Overview",id:"overview",level:2},{value:"Standard Format",id:"standard-format",level:2},{value:"ISO 8601-2:2019 UTC Format",id:"iso-8601-22019-utc-format",level:3},{value:"Key Characteristics",id:"key-characteristics",level:3},{value:"Implementation",id:"implementation",level:2},{value:"Timestamp Utility Module",id:"timestamp-utility-module",level:3},{value:"Available Functions",id:"available-functions",level:3},{value:"Core Timestamp Functions",id:"core-timestamp-functions",level:4},{value:"Formatting Functions",id:"formatting-functions",level:4},{value:"Utility Functions",id:"utility-functions",level:4},{value:"Usage Guidelines",id:"usage-guidelines",level:2},{value:"1. Data Storage",id:"1-data-storage",level:3},{value:"2. File and Folder Naming",id:"2-file-and-folder-naming",level:3},{value:"3. API Responses",id:"3-api-responses",level:3},{value:"4. Logging",id:"4-logging",level:3},{value:"Migration from Legacy Formats",id:"migration-from-legacy-formats",level:2},{value:"Previous Formats",id:"previous-formats",level:3},{value:"Migration Strategy",id:"migration-strategy",level:3},{value:"Conversion Examples",id:"conversion-examples",level:3},{value:"Testing",id:"testing",level:2},{value:"Timestamp Validation",id:"timestamp-validation",level:3},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Benefits",id:"benefits",level:2},{value:"1. Consistency",id:"1-consistency",level:3},{value:"2. Internationalization",id:"2-internationalization",level:3},{value:"3. Debugging and Monitoring",id:"3-debugging-and-monitoring",level:3},{value:"4. Future-Proofing",id:"4-future-proofing",level:3},{value:"Compliance",id:"compliance",level:2},{value:"ISO 8601-2:2019 Requirements",id:"iso-8601-22019-requirements",level:3},{value:"UTC Timezone",id:"utc-timezone",level:3},{value:"Examples",id:"examples",level:2},{value:"Complete Usage Example",id:"complete-usage-example",level:3},{value:"Database Schema Example",id:"database-schema-example",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"1. Invalid ISO Format",id:"1-invalid-iso-format",level:4},{value:"2. Timezone Confusion",id:"2-timezone-confusion",level:4},{value:"3. Precision Loss",id:"3-precision-loss",level:4},{value:"Debug Commands",id:"debug-commands",level:3},{value:"References",id:"references",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"timestamp-standards-in-libriscribe2",children:"Timestamp Standards in LibriScribe2"})}),"\n",(0,t.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(i.p,{children:["LibriScribe2 uses ",(0,t.jsx)(i.strong,{children:"ISO 8601-2:2019 UTC"})," as the standard timestamp format for all data storage and API responses. This ensures consistency, international compatibility, and proper timezone handling across the application."]}),"\n",(0,t.jsx)(i.h2,{id:"standard-format",children:"Standard Format"}),"\n",(0,t.jsx)(i.h3,{id:"iso-8601-22019-utc-format",children:"ISO 8601-2:2019 UTC Format"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Format"}),": ",(0,t.jsx)(i.code,{children:"YYYY-MM-DDTHH:MM:SS.ssssssZ"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Example"}),": ",(0,t.jsx)(i.code,{children:"2024-01-15T10:30:45.123456Z"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Timezone"}),": Always UTC (indicated by ",(0,t.jsx)(i.code,{children:"Z"})," suffix)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Precision"}),": Microsecond precision (6 decimal places)"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"key-characteristics",children:"Key Characteristics"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Human-readable"}),": Clear date and time representation"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Sortable"}),": Lexicographical sorting matches chronological order"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Timezone-aware"}),": Explicitly UTC to avoid ambiguity"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Precise"}),": Microsecond precision for accurate timing"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Standards-compliant"}),": Follows international ISO 8601 standard"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"implementation",children:"Implementation"}),"\n",(0,t.jsx)(i.h3,{id:"timestamp-utility-module",children:"Timestamp Utility Module"}),"\n",(0,t.jsxs)(i.p,{children:["All timestamp generation is centralized in ",(0,t.jsx)(i.code,{children:"src/libriscribe2/utils/timestamp_utils.py"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'from libriscribe2.utils.timestamp_utils import get_iso8601_utc_timestamp\n\n# Get current timestamp in ISO 8601-2:2019 UTC format\ntimestamp = get_iso8601_utc_timestamp()\n# Returns: "2024-01-15T10:30:45.123456Z"\n'})}),"\n",(0,t.jsx)(i.h3,{id:"available-functions",children:"Available Functions"}),"\n",(0,t.jsx)(i.h4,{id:"core-timestamp-functions",children:"Core Timestamp Functions"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"get_iso8601_utc_timestamp()"})," - Current timestamp in ISO 8601-2:2019 UTC"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"get_iso8601_utc_datetime()"})," - Current datetime object in UTC timezone"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"get_unix_timestamp()"})," - Current Unix timestamp (float)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"get_unix_timestamp_int()"})," - Current Unix timestamp (integer)"]}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"formatting-functions",children:"Formatting Functions"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"format_timestamp_for_filename()"})," - ",(0,t.jsx)(i.code,{children:"YYYYMMDD_HHMMSS"})," for filenames"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"format_timestamp_for_folder_name()"})," - ",(0,t.jsx)(i.code,{children:"YYYYMMDDHHMMSS"})," for folder names"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"format_timestamp_for_folder_name_with_microseconds()"})," - ",(0,t.jsx)(i.code,{children:"YYYYMMDDHHMMSS%f"})," with microseconds"]}),"\n"]}),"\n",(0,t.jsx)(i.h4,{id:"utility-functions",children:"Utility Functions"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"parse_iso8601_timestamp(timestamp_str)"})," - Parse ISO string to datetime"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"is_valid_iso8601_timestamp(timestamp_str)"})," - Validate ISO timestamp"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"convert_to_iso8601_utc(timestamp)"})," - Convert various formats to ISO UTC"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"usage-guidelines",children:"Usage Guidelines"}),"\n",(0,t.jsx)(i.h3,{id:"1-data-storage",children:"1. Data Storage"}),"\n",(0,t.jsx)(i.p,{children:"Always use ISO 8601-2:2019 UTC format for storing timestamps in:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"JSON files (concept.json, chapter files, etc.)"}),"\n",(0,t.jsx)(i.li,{children:"Database records"}),"\n",(0,t.jsx)(i.li,{children:"API responses"}),"\n",(0,t.jsx)(i.li,{children:"Log files"}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'# \u2705 Correct\n{\n    "timestamp": "2024-01-15T10:30:45.123456Z",\n    "content": "..."\n}\n\n# \u274c Incorrect\n{\n    "timestamp": 1705315845.123456,\n    "content": "..."\n}\n'})}),"\n",(0,t.jsx)(i.h3,{id:"2-file-and-folder-naming",children:"2. File and Folder Naming"}),"\n",(0,t.jsx)(i.p,{children:"Use appropriate formatting functions for different naming contexts:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'# For log files\nfrom libriscribe2.utils.timestamp_utils import format_timestamp_for_filename\nlog_file = f"libriscribe_{format_timestamp_for_filename()}.log"\n# Result: libriscribe_20240115_103045.log\n\n# For project folders\nfrom libriscribe2.utils.timestamp_utils import format_timestamp_for_folder_name\nfolder_name = f"project-{format_timestamp_for_folder_name()}"\n# Result: project-20240115103045\n'})}),"\n",(0,t.jsx)(i.h3,{id:"3-api-responses",children:"3. API Responses"}),"\n",(0,t.jsx)(i.p,{children:"All API responses should include timestamps in ISO 8601-2:2019 UTC format:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'response = {\n    "status": "success",\n    "timestamp": get_iso8601_utc_timestamp(),\n    "data": {...}\n}\n'})}),"\n",(0,t.jsx)(i.h3,{id:"4-logging",children:"4. Logging"}),"\n",(0,t.jsx)(i.p,{children:"Use ISO 8601-2:2019 UTC format for all log entries:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'logger.info(f"Operation completed at {get_iso8601_utc_timestamp()}")\n'})}),"\n",(0,t.jsx)(i.h2,{id:"migration-from-legacy-formats",children:"Migration from Legacy Formats"}),"\n",(0,t.jsx)(i.h3,{id:"previous-formats",children:"Previous Formats"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Unix timestamps"}),": ",(0,t.jsx)(i.code,{children:"1705315845.123456"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Local datetime"}),": ",(0,t.jsx)(i.code,{children:"2024-01-15 10:30:45"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Custom formats"}),": ",(0,t.jsx)(i.code,{children:"20240115_103045"})]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"migration-strategy",children:"Migration Strategy"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"New code"}),": Always use ",(0,t.jsx)(i.code,{children:"get_iso8601_utc_timestamp()"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Existing data"}),": Convert using ",(0,t.jsx)(i.code,{children:"convert_to_iso8601_utc()"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Legacy functions"}),": Marked as deprecated, use new equivalents"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"conversion-examples",children:"Conversion Examples"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'from libriscribe2.utils.timestamp_utils import convert_to_iso8601_utc\n\n# Convert Unix timestamp\nunix_ts = 1705315845.123456\niso_ts = convert_to_iso8601_utc(unix_ts)\n# Result: "2024-01-15T10:30:45.123456Z"\n\n# Convert datetime object\ndt = datetime.now()\niso_ts = convert_to_iso8601_utc(dt)\n# Result: "2024-01-15T10:30:45.123456Z"\n'})}),"\n",(0,t.jsx)(i.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(i.h3,{id:"timestamp-validation",children:"Timestamp Validation"}),"\n",(0,t.jsx)(i.p,{children:"Use the built-in validation function:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'from libriscribe2.utils.timestamp_utils import is_valid_iso8601_timestamp\n\n# Test valid timestamp\nassert is_valid_iso8601_timestamp("2024-01-15T10:30:45.123456Z") == True\n\n# Test invalid timestamp\nassert is_valid_iso8601_timestamp("invalid") == False\n'})}),"\n",(0,t.jsx)(i.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,t.jsxs)(i.p,{children:["All timestamp utilities include comprehensive unit tests in ",(0,t.jsx)(i.code,{children:"tests/unit/utils/test_timestamp_utils.py"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"benefits",children:"Benefits"}),"\n",(0,t.jsx)(i.h3,{id:"1-consistency",children:"1. Consistency"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Uniform timestamp format across all components"}),"\n",(0,t.jsx)(i.li,{children:"Eliminates format confusion and parsing errors"}),"\n",(0,t.jsx)(i.li,{children:"Standardized API responses"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"2-internationalization",children:"2. Internationalization"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"ISO 8601 is an international standard"}),"\n",(0,t.jsx)(i.li,{children:"UTC timezone eliminates local timezone confusion"}),"\n",(0,t.jsx)(i.li,{children:"Proper handling of daylight saving time"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"3-debugging-and-monitoring",children:"3. Debugging and Monitoring"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Human-readable timestamps in logs"}),"\n",(0,t.jsx)(i.li,{children:"Easy chronological sorting and filtering"}),"\n",(0,t.jsx)(i.li,{children:"Precise timing for performance analysis"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"4-future-proofing",children:"4. Future-Proofing"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Standards-compliant format"}),"\n",(0,t.jsx)(i.li,{children:"Extensible for additional precision"}),"\n",(0,t.jsx)(i.li,{children:"Compatible with modern tools and databases"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"compliance",children:"Compliance"}),"\n",(0,t.jsx)(i.h3,{id:"iso-8601-22019-requirements",children:"ISO 8601-2:2019 Requirements"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\u2705 Date format: ",(0,t.jsx)(i.code,{children:"YYYY-MM-DD"})]}),"\n",(0,t.jsxs)(i.li,{children:["\u2705 Time format: ",(0,t.jsx)(i.code,{children:"HH:MM:SS.ssssss"})]}),"\n",(0,t.jsxs)(i.li,{children:["\u2705 Timezone indicator: ",(0,t.jsx)(i.code,{children:"Z"})," (UTC)"]}),"\n",(0,t.jsxs)(i.li,{children:["\u2705 Separator: ",(0,t.jsx)(i.code,{children:"T"})," between date and time"]}),"\n",(0,t.jsx)(i.li,{children:"\u2705 Microsecond precision: 6 decimal places"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"utc-timezone",children:"UTC Timezone"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"\u2705 Always uses Coordinated Universal Time"}),"\n",(0,t.jsx)(i.li,{children:"\u2705 No daylight saving time complications"}),"\n",(0,t.jsx)(i.li,{children:"\u2705 Consistent across all geographic locations"}),"\n",(0,t.jsx)(i.li,{children:"\u2705 Standard for international applications"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(i.h3,{id:"complete-usage-example",children:"Complete Usage Example"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'from libriscribe2.utils.timestamp_utils import (\n    get_iso8601_utc_timestamp,\n    format_timestamp_for_filename,\n    convert_to_iso8601_utc\n)\n\n# Generate new content with ISO timestamp\ncontent = {\n    "title": "Sample Chapter",\n    "created_at": get_iso8601_utc_timestamp(),\n    "modified_at": get_iso8601_utc_timestamp(),\n    "content": "Chapter content..."\n}\n\n# Save to file with timestamped filename\nfilename = f"chapter_{format_timestamp_for_filename()}.json"\nsave_content(filename, content)\n\n# Convert legacy timestamp\nlegacy_timestamp = 1705315845.123456\niso_timestamp = convert_to_iso8601_utc(legacy_timestamp)\n'})}),"\n",(0,t.jsx)(i.h3,{id:"database-schema-example",children:"Database Schema Example"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-sql",children:"CREATE TABLE content_versions (\n    id SERIAL PRIMARY KEY,\n    content_id UUID NOT NULL,\n    version_number INTEGER NOT NULL,\n    created_at TIMESTAMP WITH TIME ZONE NOT NULL,\n    modified_at TIMESTAMP WITH TIME ZONE NOT NULL,\n    content_hash VARCHAR(64) NOT NULL,\n    metadata JSONB\n);\n\n-- Insert with ISO timestamp\nINSERT INTO content_versions (\n    content_id, version_number, created_at, modified_at, content_hash\n) VALUES (\n    '123e4567-e89b-12d3-a456-426614174000',\n    1,\n    '2024-01-15T10:30:45.123456Z',\n    '2024-01-15T10:30:45.123456Z',\n    'abc123...'\n);\n"})}),"\n",(0,t.jsx)(i.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(i.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsx)(i.h4,{id:"1-invalid-iso-format",children:"1. Invalid ISO Format"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'# \u274c Problem: Missing timezone indicator\ntimestamp = "2024-01-15T10:30:45.123456"\n\n# \u2705 Solution: Use utility function\ntimestamp = get_iso8601_utc_timestamp()\n'})}),"\n",(0,t.jsx)(i.h4,{id:"2-timezone-confusion",children:"2. Timezone Confusion"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"# \u274c Problem: Local timezone ambiguity\ntimestamp = datetime.now().isoformat()\n\n# \u2705 Solution: Explicit UTC\ntimestamp = datetime.now(timezone.utc).isoformat().replace('+00:00', 'Z')\n"})}),"\n",(0,t.jsx)(i.h4,{id:"3-precision-loss",children:"3. Precision Loss"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"# \u274c Problem: Integer timestamp loses precision\ntimestamp = int(time.time())\n\n# \u2705 Solution: Use appropriate precision\ntimestamp = get_iso8601_utc_timestamp()  # Microsecond precision\n"})}),"\n",(0,t.jsx)(i.h3,{id:"debug-commands",children:"Debug Commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'# Validate timestamp format\nfrom libriscribe2.utils.timestamp_utils import is_valid_iso8601_timestamp\nprint(f"Valid: {is_valid_iso8601_timestamp(\'2024-01-15T10:30:45.123456Z\')}")\n\n# Parse and display timestamp\nfrom libriscribe2.utils.timestamp_utils import parse_iso8601_timestamp\ndt = parse_iso8601_timestamp(\'2024-01-15T10:30:45.123456Z\')\nprint(f"Parsed: {dt}")\nprint(f"UTC: {dt.utctimetuple()}")\n'})}),"\n",(0,t.jsx)(i.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://www.iso.org/standard/70907.html",children:"ISO 8601-2:2019 Standard"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Coordinated_Universal_Time",children:"UTC Time Standard"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://docs.python.org/3/library/datetime.html",children:"Python datetime Documentation"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://tools.ietf.org/html/rfc3339",children:"RFC 3339 (Internet Timestamp Format)"})}),"\n"]})]})}function m(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>a});var s=n(6540);const t={},l=s.createContext(t);function r(e){const i=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:i},e.children)}}}]);