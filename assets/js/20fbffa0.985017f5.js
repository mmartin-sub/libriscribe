"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[438],{2300:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"api/project-manager-signatures","title":"ProjectManagerAgent - Function Signatures","description":"Complete API Reference","source":"@site/docs/api/project-manager-signatures.md","sourceDirName":"api","slug":"/api/project-manager-signatures","permalink":"/libriscribe2/docs/api/project-manager-signatures","draft":false,"unlisted":false,"editUrl":"https://github.com/guerra2fernando/libriscribe2/tree/main/docs/docs/api/project-manager-signatures.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ProjectManagerAgent API Documentation","permalink":"/libriscribe2/docs/api/project-manager-api"},"next":{"title":"LibriScribe Validation Interfaces API Documentation","permalink":"/libriscribe2/docs/api/validation-interfaces-api"}}');var a=t(4848),i=t(8453);const o={},c="ProjectManagerAgent - Function Signatures",l={},s=[{value:"Complete API Reference",id:"complete-api-reference",level:2},{value:"Class Definition",id:"class-definition",level:3},{value:"Constructor",id:"constructor",level:3},{value:"Initialization Methods",id:"initialization-methods",level:3},{value:"initialize_llm_client()",id:"initialize_llm_client",level:4},{value:"Project Management Methods",id:"project-management-methods",level:3},{value:"initialize_project_with_data()",id:"initialize_project_with_data",level:4},{value:"create_project_from_kb()",id:"create_project_from_kb",level:4},{value:"load_project_data()",id:"load_project_data",level:4},{value:"save_project_data()",id:"save_project_data",level:4},{value:"Agent Execution Methods",id:"agent-execution-methods",level:3},{value:"run_agent()",id:"run_agent",level:4},{value:"Content Generation Methods",id:"content-generation-methods",level:3},{value:"generate_concept()",id:"generate_concept",level:4},{value:"generate_outline()",id:"generate_outline",level:4},{value:"generate_characters()",id:"generate_characters",level:4},{value:"generate_worldbuilding()",id:"generate_worldbuilding",level:4},{value:"Chapter Management Methods",id:"chapter-management-methods",level:3},{value:"write_chapter()",id:"write_chapter",level:4},{value:"write_and_review_chapter()",id:"write_and_review_chapter",level:4},{value:"review_content()",id:"review_content",level:4},{value:"edit_chapter()",id:"edit_chapter",level:4},{value:"Quality Assurance Methods",id:"quality-assurance-methods",level:3},{value:"check_plagiarism()",id:"check_plagiarism",level:4},{value:"fact_check()",id:"fact_check",level:4},{value:"research_topic()",id:"research_topic",level:4},{value:"Publishing Methods",id:"publishing-methods",level:3},{value:"format_book()",id:"format_book",level:4},{value:"AutoGen Integration Methods",id:"autogen-integration-methods",level:3},{value:"run_autogen_workflow()",id:"run_autogen_workflow",level:4},{value:"run_hybrid_workflow()",id:"run_hybrid_workflow",level:4},{value:"get_autogen_analytics()",id:"get_autogen_analytics",level:4},{value:"export_autogen_logs()",id:"export_autogen_logs",level:4},{value:"Configuration Methods",id:"configuration-methods",level:3},{value:"get_autogen_configuration()",id:"get_autogen_configuration",level:4},{value:"validate_autogen_configuration()",id:"validate_autogen_configuration",level:4},{value:"Utility Methods",id:"utility-methods",level:3},{value:"checkpoint()",id:"checkpoint",level:4},{value:"needs_title_generation()",id:"needs_title_generation",level:4},{value:"generate_project_title()",id:"generate_project_title",level:4},{value:"Type Annotations Summary",id:"type-annotations-summary",level:2},{value:"Common Parameter Types",id:"common-parameter-types",level:3},{value:"Return Types",id:"return-types",level:3},{value:"Exception Types",id:"exception-types",level:3},{value:"Usage Patterns",id:"usage-patterns",level:2},{value:"Basic Initialization Pattern",id:"basic-initialization-pattern",level:3},{value:"Project Creation Pattern",id:"project-creation-pattern",level:3},{value:"Project Loading Pattern",id:"project-loading-pattern",level:3},{value:"Agent Execution Pattern",id:"agent-execution-pattern",level:3},{value:"Chapter Writing Pattern",id:"chapter-writing-pattern",level:3},{value:"AutoGen Workflow Pattern",id:"autogen-workflow-pattern",level:3},{value:"Import Requirements",id:"import-requirements",level:2},{value:"Agent Registry",id:"agent-registry",level:2},{value:"Properties",id:"properties",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"projectmanageragent---function-signatures",children:"ProjectManagerAgent - Function Signatures"})}),"\n",(0,a.jsx)(n.h2,{id:"complete-api-reference",children:"Complete API Reference"}),"\n",(0,a.jsx)(n.h3,{id:"class-definition",children:"Class Definition"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'class ProjectManagerAgent:\n    """Manages the book creation process."""\n'})}),"\n",(0,a.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def __init__(\n    self,\n    settings: Settings,\n    llm_client: LLMClient | None = None,\n    model_config: dict[str, str] | None = None,\n    use_autogen: bool = False,\n) -> None\n"})}),"\n",(0,a.jsx)(n.h3,{id:"initialization-methods",children:"Initialization Methods"}),"\n",(0,a.jsx)(n.h4,{id:"initialize_llm_client",children:"initialize_llm_client()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def initialize_llm_client(self, llm_provider: str, user: str | None = None) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Initialize the LLM client and all specialized agents."}),"\n",(0,a.jsx)(n.h3,{id:"project-management-methods",children:"Project Management Methods"}),"\n",(0,a.jsx)(n.h4,{id:"initialize_project_with_data",children:"initialize_project_with_data()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def initialize_project_with_data(self, project_data: ProjectKnowledgeBase) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Initialize a project using a ProjectKnowledgeBase object."}),"\n",(0,a.jsx)(n.h4,{id:"create_project_from_kb",children:"create_project_from_kb()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def create_project_from_kb(self, project_kb: ProjectKnowledgeBase, output_path: str = "") -> None\n'})}),"\n",(0,a.jsx)(n.p,{children:"Create a project from a ProjectKnowledgeBase object with optional custom path."}),"\n",(0,a.jsx)(n.h4,{id:"load_project_data",children:"load_project_data()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def load_project_data(self, project_name: str) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Load project data from the file system."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"FileNotFoundError"}),": If project directory or project_data.json doesn't exist"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ValueError"}),": If project data is corrupted or cannot be loaded"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"save_project_data",children:"save_project_data()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def save_project_data() -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Save the current project data to project_data.json."}),"\n",(0,a.jsx)(n.h3,{id:"agent-execution-methods",children:"Agent Execution Methods"}),"\n",(0,a.jsx)(n.h4,{id:"run_agent",children:"run_agent()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def run_agent(self, agent_name: str, **kwargs) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Execute a specific agent with provided arguments."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ValueError"}),": If agent not found or project knowledge base not initialized"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"content-generation-methods",children:"Content Generation Methods"}),"\n",(0,a.jsx)(n.h4,{id:"generate_concept",children:"generate_concept()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def generate_concept() -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Generate a book concept and save to concept.json."}),"\n",(0,a.jsx)(n.h4,{id:"generate_outline",children:"generate_outline()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def generate_outline() -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Generate a comprehensive book outline."}),"\n",(0,a.jsx)(n.h4,{id:"generate_characters",children:"generate_characters()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def generate_characters() -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Generate character profiles for the book."}),"\n",(0,a.jsx)(n.h4,{id:"generate_worldbuilding",children:"generate_worldbuilding()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def generate_worldbuilding() -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Generate worldbuilding details including settings and cultures."}),"\n",(0,a.jsx)(n.h3,{id:"chapter-management-methods",children:"Chapter Management Methods"}),"\n",(0,a.jsx)(n.h4,{id:"write_chapter",children:"write_chapter()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def write_chapter(self, chapter_number: int) -> None\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Write a specific chapter and save as ",(0,a.jsx)(n.code,{children:"chapter_{number}.md"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"write_and_review_chapter",children:"write_and_review_chapter()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def write_and_review_chapter(self, chapter_number: int) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Write a chapter and automatically review it for content issues."}),"\n",(0,a.jsx)(n.h4,{id:"review_content",children:"review_content()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def review_content(self, chapter_number: int) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Review a specific chapter for quality and consistency."}),"\n",(0,a.jsx)(n.h4,{id:"edit_chapter",children:"edit_chapter()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def edit_chapter(self, chapter_number: int) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Edit a chapter for improved quality and style."}),"\n",(0,a.jsx)(n.h3,{id:"quality-assurance-methods",children:"Quality Assurance Methods"}),"\n",(0,a.jsx)(n.h4,{id:"check_plagiarism",children:"check_plagiarism()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def check_plagiarism(self, chapter_number: int) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Check a chapter for potential plagiarism issues."}),"\n",(0,a.jsx)(n.h4,{id:"fact_check",children:"fact_check()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def fact_check(self, chapter_number: int) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Perform fact-checking on a chapter's content."}),"\n",(0,a.jsx)(n.h4,{id:"research_topic",children:"research_topic()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def research_topic(self, topic: str) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Research a specific topic and save results."}),"\n",(0,a.jsx)(n.h3,{id:"publishing-methods",children:"Publishing Methods"}),"\n",(0,a.jsx)(n.h4,{id:"format_book",children:"format_book()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def format_book() -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Format the complete book for publication."}),"\n",(0,a.jsx)(n.h3,{id:"autogen-integration-methods",children:"AutoGen Integration Methods"}),"\n",(0,a.jsx)(n.h4,{id:"run_autogen_workflow",children:"run_autogen_workflow()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def run_autogen_workflow() -> bool\n"})}),"\n",(0,a.jsx)(n.p,{children:"Run the complete book creation workflow using AutoGen."}),"\n",(0,a.jsx)(n.h4,{id:"run_hybrid_workflow",children:"run_hybrid_workflow()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def run_hybrid_workflow() -> bool\n"})}),"\n",(0,a.jsx)(n.p,{children:"Run a hybrid workflow using AutoGen coordination with LibriScribe agents."}),"\n",(0,a.jsx)(n.h4,{id:"get_autogen_analytics",children:"get_autogen_analytics()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def get_autogen_analytics() -> dict[str, Any]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Get analytics data from AutoGen service."}),"\n",(0,a.jsx)(n.h4,{id:"export_autogen_logs",children:"export_autogen_logs()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def export_autogen_logs(self, output_path: str) -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Export AutoGen conversation logs to specified path."}),"\n",(0,a.jsx)(n.h3,{id:"configuration-methods",children:"Configuration Methods"}),"\n",(0,a.jsx)(n.h4,{id:"get_autogen_configuration",children:"get_autogen_configuration()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def get_autogen_configuration(self, use_case: str) -> dict[str, Any]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Get recommended AutoGen configuration for a specific use case."}),"\n",(0,a.jsx)(n.h4,{id:"validate_autogen_configuration",children:"validate_autogen_configuration()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def validate_autogen_configuration(self, config: dict[str, Any]) -> list[str]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Validate AutoGen configuration and return any issues."}),"\n",(0,a.jsx)(n.h3,{id:"utility-methods",children:"Utility Methods"}),"\n",(0,a.jsx)(n.h4,{id:"checkpoint",children:"checkpoint()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def checkpoint() -> None\n"})}),"\n",(0,a.jsx)(n.p,{children:"Save the current state of the project."}),"\n",(0,a.jsx)(n.h4,{id:"needs_title_generation",children:"needs_title_generation()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def needs_title_generation() -> bool\n"})}),"\n",(0,a.jsx)(n.p,{children:"Check if automatic title generation is needed."}),"\n",(0,a.jsx)(n.h4,{id:"generate_project_title",children:"generate_project_title()"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"async def generate_project_title() -> bool\n"})}),"\n",(0,a.jsx)(n.p,{children:"Generate a title for the project if auto-title is enabled."}),"\n",(0,a.jsx)(n.h2,{id:"type-annotations-summary",children:"Type Annotations Summary"}),"\n",(0,a.jsx)(n.h3,{id:"common-parameter-types",children:"Common Parameter Types"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Basic types\nproject_name: str\nchapter_number: int\ntopic: str\noutput_path: str\nuse_case: str\n\n# Complex types\nsettings: Settings\nproject_data: ProjectKnowledgeBase\nproject_kb: ProjectKnowledgeBase\nllm_client: LLMClient | None\nmodel_config: dict[str, str] | None\nconfig: dict[str, Any]\n\n# Optional types\nuser: str | None = None\noutput_path: str = ""\nuse_autogen: bool = False\n'})}),"\n",(0,a.jsx)(n.h3,{id:"return-types",children:"Return Types"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Void methods\n-> None                    # Most initialization and execution methods\n\n# Boolean returns\n-> bool                    # Workflow and generation success indicators\n\n# Data returns\n-> dict[str, Any]         # Configuration and analytics data\n-> list[str]              # Validation issues and error lists\n"})}),"\n",(0,a.jsx)(n.h3,{id:"exception-types",children:"Exception Types"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# File system errors\nFileNotFoundError         # Missing project files or directories\nValueError               # Invalid data, missing agents, or corrupted files\n\n# Agent execution errors\nException                # Generic agent execution failures (re-raised)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"usage-patterns",children:"Usage Patterns"}),"\n",(0,a.jsx)(n.h3,{id:"basic-initialization-pattern",children:"Basic Initialization Pattern"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'project_manager = ProjectManagerAgent(settings)\nproject_manager.initialize_llm_client("openai")\n'})}),"\n",(0,a.jsx)(n.h3,{id:"project-creation-pattern",children:"Project Creation Pattern"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'project_kb = ProjectKnowledgeBase(project_name="my-book")\nproject_manager.initialize_project_with_data(project_kb)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"project-loading-pattern",children:"Project Loading Pattern"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'try:\n    project_manager.load_project_data("existing-project")\nexcept FileNotFoundError:\n    # Handle missing project\n    pass\nexcept ValueError:\n    # Handle corrupted data\n    pass\n'})}),"\n",(0,a.jsx)(n.h3,{id:"agent-execution-pattern",children:"Agent Execution Pattern"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'await project_manager.run_agent("agent_name", param1=value1, param2=value2)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"chapter-writing-pattern",children:"Chapter Writing Pattern"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"for chapter_num in range(1, total_chapters + 1):\n    await project_manager.write_and_review_chapter(chapter_num)\n    project_manager.checkpoint()\n"})}),"\n",(0,a.jsx)(n.h3,{id:"autogen-workflow-pattern",children:"AutoGen Workflow Pattern"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"if project_manager.use_autogen:\n    success = await project_manager.run_autogen_workflow()\n    if success:\n        analytics = project_manager.get_autogen_analytics()\n"})}),"\n",(0,a.jsx)(n.h2,{id:"import-requirements",children:"Import Requirements"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from pathlib import Path\nfrom typing import Any\nfrom rich.console import Console\n\n# LibriScribe imports\nfrom ..agent_frameworks.autogen import AutoGenConfigurationManager, AutoGenService\nfrom ..knowledge_base import ProjectKnowledgeBase\nfrom ..settings import Settings\nfrom ..utils.llm_client import LLMClient\n\n# Agent imports\nfrom .chapter_writer import ChapterWriterAgent\nfrom .character_generator import CharacterGeneratorAgent\nfrom .concept_generator import ConceptGeneratorAgent\nfrom .content_reviewer import ContentReviewerAgent\nfrom .editor import EditorAgent\nfrom .fact_checker import FactCheckerAgent\nfrom .formatting import FormattingAgent\nfrom .outliner import OutlinerAgent\nfrom .plagiarism_checker import PlagiarismCheckerAgent\nfrom .researcher import ResearcherAgent\nfrom .style_editor import StyleEditorAgent\nfrom .worldbuilding import WorldbuildingAgent\n"})}),"\n",(0,a.jsx)(n.h2,{id:"agent-registry",children:"Agent Registry"}),"\n",(0,a.jsx)(n.p,{children:"The ProjectManagerAgent manages the following specialized agents:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'self.agents = {\n    "content_reviewer": ContentReviewerAgent,\n    "concept_generator": ConceptGeneratorAgent,\n    "outliner": OutlinerAgent,\n    "character_generator": CharacterGeneratorAgent,\n    "worldbuilding": WorldbuildingAgent,\n    "chapter_writer": ChapterWriterAgent,\n    "editor": EditorAgent,\n    "researcher": ResearcherAgent,\n    "formatting": FormattingAgent,\n    "style_editor": StyleEditorAgent,\n    "plagiarism_checker": PlagiarismCheckerAgent,\n    "fact_checker": FactCheckerAgent,\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Core properties\nself.settings: Settings\nself.model_config: dict[str, str]\nself.project_knowledge_base: ProjectKnowledgeBase | None\nself.project_dir: Path | None\nself.llm_client: LLMClient | None\nself.agents: dict[str, Any]\nself.logger: logging.Logger\n\n# AutoGen properties\nself.use_autogen: bool\nself.autogen_service: AutoGenService | None\nself.autogen_config_manager: AutoGenConfigurationManager\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(6540);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);