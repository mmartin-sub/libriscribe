"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[415],{5340:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api/project-manager-api","title":"ProjectManagerAgent API Documentation","description":"Overview","source":"@site/docs/api/project-manager-api.md","sourceDirName":"api","slug":"/api/project-manager-api","permalink":"/libriscribe2/docs/api/project-manager-api","draft":false,"unlisted":false,"editUrl":"https://github.com/guerra2fernando/libriscribe2/tree/main/docs/docs/api/project-manager-api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Performance Improvements Module - Documentation Summary","permalink":"/libriscribe2/docs/api/performance-improvements-summary"},"next":{"title":"ProjectManagerAgent - Function Signatures","permalink":"/libriscribe2/docs/api/project-manager-signatures"}}');var i=r(4848),s=r(8453);const a={},o="ProjectManagerAgent API Documentation",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Class Definition",id:"class-definition",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Core Methods",id:"core-methods",level:2},{value:"initialize_llm_client()",id:"initialize_llm_client",level:3},{value:"Project Management Methods",id:"project-management-methods",level:3},{value:"initialize_project_with_data()",id:"initialize_project_with_data",level:4},{value:"create_project_from_kb()",id:"create_project_from_kb",level:4},{value:"load_project_data()",id:"load_project_data",level:4},{value:"save_project_data()",id:"save_project_data",level:4},{value:"Agent Execution Methods",id:"agent-execution-methods",level:3},{value:"run_agent()",id:"run_agent",level:4},{value:"Content Generation Methods",id:"content-generation-methods",level:3},{value:"generate_concept()",id:"generate_concept",level:4},{value:"generate_outline()",id:"generate_outline",level:4},{value:"generate_characters()",id:"generate_characters",level:4},{value:"generate_worldbuilding()",id:"generate_worldbuilding",level:4},{value:"Chapter Management Methods",id:"chapter-management-methods",level:3},{value:"write_chapter()",id:"write_chapter",level:4},{value:"write_and_review_chapter()",id:"write_and_review_chapter",level:4},{value:"review_content()",id:"review_content",level:4},{value:"edit_chapter()",id:"edit_chapter",level:4},{value:"Quality Assurance Methods",id:"quality-assurance-methods",level:3},{value:"check_plagiarism()",id:"check_plagiarism",level:4},{value:"fact_check()",id:"fact_check",level:4},{value:"research_topic()",id:"research_topic",level:4},{value:"Publishing Methods",id:"publishing-methods",level:3},{value:"format_book()",id:"format_book",level:4},{value:"AutoGen Integration Methods",id:"autogen-integration-methods",level:3},{value:"run_autogen_workflow()",id:"run_autogen_workflow",level:4},{value:"run_hybrid_workflow()",id:"run_hybrid_workflow",level:4},{value:"get_autogen_analytics()",id:"get_autogen_analytics",level:4},{value:"export_autogen_logs()",id:"export_autogen_logs",level:4},{value:"Configuration Methods",id:"configuration-methods",level:3},{value:"get_autogen_configuration()",id:"get_autogen_configuration",level:4},{value:"validate_autogen_configuration()",id:"validate_autogen_configuration",level:4},{value:"Utility Methods",id:"utility-methods",level:3},{value:"checkpoint()",id:"checkpoint",level:4},{value:"needs_title_generation()",id:"needs_title_generation",level:4},{value:"generate_project_title()",id:"generate_project_title",level:4},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Project Creation",id:"basic-project-creation",level:3},{value:"Loading and Continuing Existing Project",id:"loading-and-continuing-existing-project",level:3},{value:"AutoGen Integration",id:"autogen-integration",level:3},{value:"Error Handling Best Practices",id:"error-handling-best-practices",level:3},{value:"Integration with Other Components",id:"integration-with-other-components",level:2},{value:"Settings Integration",id:"settings-integration",level:3},{value:"Knowledge Base Integration",id:"knowledge-base-integration",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"projectmanageragent-api-documentation",children:"ProjectManagerAgent API Documentation"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ProjectManagerAgent"})," class is the central orchestrator for LibriScribe's book creation process. It manages the entire workflow from concept generation to final formatting, coordinating multiple specialized agents and handling project state management."]}),"\n",(0,i.jsx)(n.h2,{id:"class-definition",children:"Class Definition"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'class ProjectManagerAgent:\n    """Manages the book creation process."""\n'})}),"\n",(0,i.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def __init__(\n    self,\n    settings: Settings,\n    llm_client: LLMClient | None = None,\n    model_config: dict[str, str] | None = None,\n    use_autogen: bool = False,\n) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"settings"})," (Settings): LibriScribe settings configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"llm_client"})," (LLMClient | None): Optional pre-initialized LLM client"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"model_config"})," (dict[str, str] | None): Model configuration overrides"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"use_autogen"})," (bool): Enable AutoGen multi-agent framework integration"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nInitializes the ProjectManagerAgent with the specified configuration. The agent manages a collection of specialized agents for different aspects of book creation."]}),"\n",(0,i.jsx)(n.h2,{id:"core-methods",children:"Core Methods"}),"\n",(0,i.jsx)(n.h3,{id:"initialize_llm_client",children:"initialize_llm_client()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def initialize_llm_client(self, llm_provider: str, user: str | None = None) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"llm_provider"}),' (str): LLM provider identifier (e.g., "openai", "anthropic")']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"user"})," (str | None): Optional user identifier for tracking"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nInitializes the LLM client and all specialized agents. This method must be called before using any agent functionality."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'project_manager = ProjectManagerAgent(settings)\nproject_manager.initialize_llm_client("openai", user="author123")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"project-management-methods",children:"Project Management Methods"}),"\n",(0,i.jsx)(n.h4,{id:"initialize_project_with_data",children:"initialize_project_with_data()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def initialize_project_with_data(self, project_data: ProjectKnowledgeBase) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_data"})," (ProjectKnowledgeBase): Complete project data structure"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nInitializes a new project using an existing ProjectKnowledgeBase object. Creates the project directory and saves initial data."]}),"\n",(0,i.jsx)(n.h4,{id:"create_project_from_kb",children:"create_project_from_kb()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def create_project_from_kb(self, project_kb: ProjectKnowledgeBase, output_path: str = "") -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_kb"})," (ProjectKnowledgeBase): Project knowledge base to create from"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"output_path"})," (str): Optional custom output directory path"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nCreates a project from a ProjectKnowledgeBase object with optional custom output path."]}),"\n",(0,i.jsx)(n.h4,{id:"load_project_data",children:"load_project_data()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def load_project_data(self, project_name: str) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project to load"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns:"})," None"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FileNotFoundError"}),": If project directory or project_data.json doesn't exist"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ValueError"}),": If project data is corrupted or cannot be loaded"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nLoads an existing project from the file system. This method locates the project directory, loads the project_data.json file, and initializes the ProjectManagerAgent with the loaded data."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'project_manager = ProjectManagerAgent(settings)\nproject_manager.initialize_llm_client("openai")\n\ntry:\n    project_manager.load_project_data("my-awesome-book")\n    print(f"Loaded project: {project_manager.project_knowledge_base.title}")\nexcept FileNotFoundError as e:\n    print(f"Project not found: {e}")\nexcept ValueError as e:\n    print(f"Invalid project data: {e}")\n'})}),"\n",(0,i.jsx)(n.h4,{id:"save_project_data",children:"save_project_data()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def save_project_data(self) -> None\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nSaves the current project data to the project_data.json file in the project directory."]}),"\n",(0,i.jsx)(n.h3,{id:"agent-execution-methods",children:"Agent Execution Methods"}),"\n",(0,i.jsx)(n.h4,{id:"run_agent",children:"run_agent()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def run_agent(self, agent_name: str, **kwargs) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"agent_name"})," (str): Name of the agent to run"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"**kwargs"}),": Additional arguments passed to the agent"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ValueError"}),": If agent not found or project knowledge base not initialized"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nExecutes a specific agent with the provided arguments. Automatically saves project data after successful execution."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Available Agents:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"content_reviewer"}),": Reviews content for quality and consistency"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"concept_generator"}),": Generates book concepts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"outliner"}),": Creates book outlines"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"character_generator"}),": Generates character profiles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"worldbuilding"}),": Creates worldbuilding details"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapter_writer"}),": Writes individual chapters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"editor"}),": Edits content for quality and style"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"researcher"}),": Researches topics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"formatting"}),": Formats the final book"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"style_editor"}),": Applies style editing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"plagiarism_checker"}),": Checks for plagiarism"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fact_checker"}),": Verifies factual accuracy"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"content-generation-methods",children:"Content Generation Methods"}),"\n",(0,i.jsx)(n.h4,{id:"generate_concept",children:"generate_concept()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def generate_concept() -> None\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nGenerates a book concept and saves it to concept.json in the project directory."]}),"\n",(0,i.jsx)(n.h4,{id:"generate_outline",children:"generate_outline()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def generate_outline() -> None\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nGenerates a comprehensive book outline based on the concept."]}),"\n",(0,i.jsx)(n.h4,{id:"generate_characters",children:"generate_characters()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def generate_characters() -> None\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nGenerates character profiles for the book."]}),"\n",(0,i.jsx)(n.h4,{id:"generate_worldbuilding",children:"generate_worldbuilding()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def generate_worldbuilding() -> None\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nGenerates worldbuilding details including settings, cultures, and history."]}),"\n",(0,i.jsx)(n.h3,{id:"chapter-management-methods",children:"Chapter Management Methods"}),"\n",(0,i.jsx)(n.h4,{id:"write_chapter",children:"write_chapter()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def write_chapter(self, chapter_number: int) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapter_number"})," (int): Chapter number to write"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nWrites a specific chapter and saves it as ",(0,i.jsx)(n.code,{children:"chapter_{number}.md"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"write_and_review_chapter",children:"write_and_review_chapter()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def write_and_review_chapter(self, chapter_number: int) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapter_number"})," (int): Chapter number to write and review"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nWrites a chapter and automatically reviews it for content issues. This is the recommended method for chapter creation as it includes quality control."]}),"\n",(0,i.jsx)(n.h4,{id:"review_content",children:"review_content()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def review_content(self, chapter_number: int) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapter_number"})," (int): Chapter number to review"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nReviews a specific chapter for quality and consistency issues."]}),"\n",(0,i.jsx)(n.h4,{id:"edit_chapter",children:"edit_chapter()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def edit_chapter(self, chapter_number: int) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapter_number"})," (int): Chapter number to edit"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nEdits a chapter for improved quality and style."]}),"\n",(0,i.jsx)(n.h3,{id:"quality-assurance-methods",children:"Quality Assurance Methods"}),"\n",(0,i.jsx)(n.h4,{id:"check_plagiarism",children:"check_plagiarism()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def check_plagiarism(self, chapter_number: int) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapter_number"})," (int): Chapter number to check"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nChecks a chapter for potential plagiarism issues."]}),"\n",(0,i.jsx)(n.h4,{id:"fact_check",children:"fact_check()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def fact_check(self, chapter_number: int) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapter_number"})," (int): Chapter number to fact-check"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nPerforms fact-checking on a chapter's content."]}),"\n",(0,i.jsx)(n.h4,{id:"research_topic",children:"research_topic()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def research_topic(self, topic: str) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"topic"})," (str): Topic to research"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nResearches a specific topic and saves the results."]}),"\n",(0,i.jsx)(n.h3,{id:"publishing-methods",children:"Publishing Methods"}),"\n",(0,i.jsx)(n.h4,{id:"format_book",children:"format_book()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def format_book() -> None\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nFormats the complete book for publication, creating formatted_book.md."]}),"\n",(0,i.jsx)(n.h3,{id:"autogen-integration-methods",children:"AutoGen Integration Methods"}),"\n",(0,i.jsx)(n.h4,{id:"run_autogen_workflow",children:"run_autogen_workflow()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def run_autogen_workflow() -> bool\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bool"}),": True if workflow completed successfully, False otherwise"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nRuns the complete book creation workflow using the AutoGen multi-agent framework."]}),"\n",(0,i.jsx)(n.h4,{id:"run_hybrid_workflow",children:"run_hybrid_workflow()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def run_hybrid_workflow() -> bool\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bool"}),": True if workflow completed successfully, False otherwise"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nRuns a hybrid workflow using AutoGen for coordination and LibriScribe agents for execution."]}),"\n",(0,i.jsx)(n.h4,{id:"get_autogen_analytics",children:"get_autogen_analytics()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def get_autogen_analytics() -> dict[str, Any]\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dict[str, Any]"}),": Analytics data from AutoGen service"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nRetrieves analytics and metrics from the AutoGen service if available."]}),"\n",(0,i.jsx)(n.h4,{id:"export_autogen_logs",children:"export_autogen_logs()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def export_autogen_logs(self, output_path: str) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"output_path"})," (str): Path to save the exported logs"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nExports AutoGen conversation logs to the specified path."]}),"\n",(0,i.jsx)(n.h3,{id:"configuration-methods",children:"Configuration Methods"}),"\n",(0,i.jsx)(n.h4,{id:"get_autogen_configuration",children:"get_autogen_configuration()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def get_autogen_configuration(self, use_case: str) -> dict[str, Any]\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"use_case"})," (str): Specific use case for configuration"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dict[str, Any]"}),": Recommended AutoGen configuration"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nGets recommended AutoGen configuration for a specific use case."]}),"\n",(0,i.jsx)(n.h4,{id:"validate_autogen_configuration",children:"validate_autogen_configuration()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def validate_autogen_configuration(self, config: dict[str, Any]) -> list[str]\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"config"})," (dict[str, Any]): Configuration to validate"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"list[str]"}),": List of validation issues (empty if valid)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nValidates an AutoGen configuration and returns any issues found."]}),"\n",(0,i.jsx)(n.h3,{id:"utility-methods",children:"Utility Methods"}),"\n",(0,i.jsx)(n.h4,{id:"checkpoint",children:"checkpoint()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def checkpoint() -> None\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nSaves the current state of the project as a checkpoint."]}),"\n",(0,i.jsx)(n.h4,{id:"needs_title_generation",children:"needs_title_generation()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def needs_title_generation() -> bool\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bool"}),": True if title generation is needed"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nChecks if automatic title generation is needed for the current project."]}),"\n",(0,i.jsx)(n.h4,{id:"generate_project_title",children:"generate_project_title()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def generate_project_title() -> bool\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bool"}),": True if title was generated successfully"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description:"}),"\nGenerates a title for the project if auto-title is enabled and conditions are met."]}),"\n",(0,i.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,i.jsx)(n.h3,{id:"basic-project-creation",children:"Basic Project Creation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from libriscribe2.agents.project_manager import ProjectManagerAgent\nfrom libriscribe2.settings import Settings\nfrom libriscribe2.knowledge_base import ProjectKnowledgeBase\n\n# Initialize settings and project manager\nsettings = Settings()\nproject_manager = ProjectManagerAgent(settings)\nproject_manager.initialize_llm_client("openai")\n\n# Create a new project\nproject_kb = ProjectKnowledgeBase(\n    project_name="my-fantasy-novel",\n    title="The Dragon\'s Quest",\n    genre="fantasy",\n    description="An epic fantasy adventure"\n)\n\nproject_manager.initialize_project_with_data(project_kb)\n\n# Generate content\nawait project_manager.generate_concept()\nawait project_manager.generate_outline()\nawait project_manager.generate_characters()\nawait project_manager.generate_worldbuilding()\n\n# Write chapters\nfor chapter_num in range(1, 11):\n    await project_manager.write_and_review_chapter(chapter_num)\n\n# Format final book\nawait project_manager.format_book()\n'})}),"\n",(0,i.jsx)(n.h3,{id:"loading-and-continuing-existing-project",children:"Loading and Continuing Existing Project"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Load existing project\nproject_manager = ProjectManagerAgent(settings)\nproject_manager.initialize_llm_client("openai")\n\ntry:\n    project_manager.load_project_data("my-fantasy-novel")\n\n    # Continue writing from where we left off\n    current_chapter = len(project_manager.project_knowledge_base.chapters) + 1\n    await project_manager.write_and_review_chapter(current_chapter)\n\n    # Perform quality checks\n    await project_manager.check_plagiarism(current_chapter)\n    await project_manager.fact_check(current_chapter)\n\nexcept FileNotFoundError:\n    print("Project not found")\nexcept ValueError as e:\n    print(f"Error loading project: {e}")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"autogen-integration",children:"AutoGen Integration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Use AutoGen for coordinated book creation\nproject_manager = ProjectManagerAgent(settings, use_autogen=True)\nproject_manager.initialize_llm_client("openai")\n\n# Create project\nproject_kb = ProjectKnowledgeBase(project_name="ai-coordinated-book")\nproject_manager.initialize_project_with_data(project_kb)\n\n# Run AutoGen workflow\nsuccess = await project_manager.run_autogen_workflow()\n\nif success:\n    # Get analytics\n    analytics = project_manager.get_autogen_analytics()\n    print(f"Workflow completed with {analytics.get(\'total_messages\', 0)} messages")\n\n    # Export logs\n    project_manager.export_autogen_logs("autogen_conversation.json")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"error-handling-best-practices",children:"Error Handling Best Practices"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'async def create_book_with_error_handling():\n    project_manager = ProjectManagerAgent(settings)\n\n    try:\n        project_manager.initialize_llm_client("openai")\n\n        # Load or create project\n        try:\n            project_manager.load_project_data("existing-project")\n        except FileNotFoundError:\n            # Create new project if not found\n            project_kb = ProjectKnowledgeBase(project_name="existing-project")\n            project_manager.initialize_project_with_data(project_kb)\n\n        # Generate content with checkpoints\n        await project_manager.generate_concept()\n        project_manager.checkpoint()\n\n        await project_manager.generate_outline()\n        project_manager.checkpoint()\n\n        # Write chapters with error recovery\n        for chapter_num in range(1, 6):\n            try:\n                await project_manager.write_and_review_chapter(chapter_num)\n                project_manager.checkpoint()\n            except Exception as e:\n                logger.error(f"Failed to write chapter {chapter_num}: {e}")\n                # Continue with next chapter\n                continue\n\n        await project_manager.format_book()\n\n    except Exception as e:\n        logger.error(f"Book creation failed: {e}")\n        raise\n'})}),"\n",(0,i.jsx)(n.h2,{id:"integration-with-other-components",children:"Integration with Other Components"}),"\n",(0,i.jsx)(n.h3,{id:"settings-integration",children:"Settings Integration"}),"\n",(0,i.jsx)(n.p,{children:"The ProjectManagerAgent integrates closely with the Settings system:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Settings affect LLM configuration, timeouts, and project directories\nsettings = Settings()\nsettings.llm_timeout = 300  # 5 minute timeout\nsettings.projects_dir = "/custom/projects/path"\n\nproject_manager = ProjectManagerAgent(settings)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"knowledge-base-integration",children:"Knowledge Base Integration"}),"\n",(0,i.jsx)(n.p,{children:"The agent works directly with ProjectKnowledgeBase objects:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Access project data\nkb = project_manager.project_knowledge_base\nprint(f"Title: {kb.title}")\nprint(f"Chapters: {len(kb.chapters)}")\nprint(f"Characters: {len(kb.characters)}")\n\n# Modify project data\nkb.genre = "science fiction"\nproject_manager.save_project_data()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.p,{children:"The ProjectManagerAgent implements comprehensive error handling:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FileNotFoundError"}),": Raised when project files cannot be found"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ValueError"}),": Raised for invalid project data or missing agents"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Agent-specific exceptions"}),": Propagated from individual agents"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatic cleanup"}),": Resources are cleaned up on errors"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Detailed logging"}),": All errors are logged with context"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Async operations"}),": All agent operations are asynchronous"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Checkpointing"}),": Regular saves prevent data loss"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resource management"}),": Proper cleanup of temporary files"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Timeout handling"}),": Configurable timeouts for LLM operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Memory efficiency"}),": Large projects are handled efficiently"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(6540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);