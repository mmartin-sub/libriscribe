"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[700],{4405:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"api/cli-signatures","title":"LibriScribe2 CLI - Function Signatures","description":"Complete API Reference","source":"@site/docs/api/cli-signatures.md","sourceDirName":"api","slug":"/api/cli-signatures","permalink":"/libriscribe2/docs/api/cli-signatures","draft":false,"unlisted":false,"editUrl":"https://github.com/guerra2fernando/libriscribe2/tree/main/docs/docs/api/cli-signatures.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LibriScribe2 CLI Documentation Summary","permalink":"/libriscribe2/docs/api/cli-documentation-summary"},"next":{"title":"concept-generator-api","permalink":"/libriscribe2/docs/api/concept-generator-api"}}');var i=r(4848),s=r(8453);const l={},o="LibriScribe2 CLI - Function Signatures",c={},a=[{value:"Complete API Reference",id:"complete-api-reference",level:2},{value:"Module-Level Functions",id:"module-level-functions",level:3},{value:"setup_application_logging()",id:"setup_application_logging",level:4},{value:"custom_help()",id:"custom_help",level:4},{value:"version_callback()",id:"version_callback",level:4},{value:"log_command_start()",id:"log_command_start",level:4},{value:"suppress_traceback()",id:"suppress_traceback",level:4},{value:"Command Functions",id:"command-functions",level:3},{value:"start()",id:"start",level:4},{value:"create_book()",id:"create_book",level:4},{value:"book_stats()",id:"book_stats",level:4},{value:"generate_title()",id:"generate_title",level:4},{value:"resume()",id:"resume",level:4},{value:"Async Command Functions",id:"async-command-functions",level:3},{value:"concept()",id:"concept",level:4},{value:"outline()",id:"outline",level:4},{value:"characters()",id:"characters",level:4},{value:"worldbuilding()",id:"worldbuilding",level:4},{value:"write()",id:"write",level:4},{value:"edit()",id:"edit",level:4},{value:"format()",id:"format",level:4},{value:"research()",id:"research",level:4},{value:"Global Variables",id:"global-variables",level:2},{value:"console",id:"console",level:3},{value:"project_manager",id:"project_manager",level:3},{value:"app_log_file",id:"app_log_file",level:3},{value:"Type Annotations Summary",id:"type-annotations-summary",level:2},{value:"Common Parameter Types",id:"common-parameter-types",level:3},{value:"Return Types",id:"return-types",level:3},{value:"Exception Types",id:"exception-types",level:3},{value:"Usage Patterns",id:"usage-patterns",level:2},{value:"Basic Command Structure",id:"basic-command-structure",level:3},{value:"Async Command Structure",id:"async-command-structure",level:3},{value:"Error Handling Pattern",id:"error-handling-pattern",level:3},{value:"Logging Pattern",id:"logging-pattern",level:3},{value:"Import Requirements",id:"import-requirements",level:2},{value:"Command Registration",id:"command-registration",level:2},{value:"Entry Point",id:"entry-point",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"libriscribe2-cli---function-signatures",children:"LibriScribe2 CLI - Function Signatures"})}),"\n",(0,i.jsx)(n.h2,{id:"complete-api-reference",children:"Complete API Reference"}),"\n",(0,i.jsx)(n.h3,{id:"module-level-functions",children:"Module-Level Functions"}),"\n",(0,i.jsx)(n.h4,{id:"setup_application_logging",children:"setup_application_logging()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def setup_application_logging() -> Path\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set up application-level logging before any project is created."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Path"}),": Path to the created log file"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Side Effects:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Creates ",(0,i.jsx)(n.code,{children:"logs/"})," directory if it doesn't exist"]}),"\n",(0,i.jsxs)(n.li,{children:["Creates timestamped log file: ",(0,i.jsx)(n.code,{children:"logs/libriscribe_{timestamp}.log"})]}),"\n",(0,i.jsx)(n.li,{children:"Configures file handler with DEBUG level logging"}),"\n",(0,i.jsx)(n.li,{children:"Adds file handler to root logger"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"custom_help",children:"custom_help()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def custom_help() -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Display custom help with Rich formatting."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Features:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Colored tables showing command categories"}),"\n",(0,i.jsx)(n.li,{children:"Usage recommendations"}),"\n",(0,i.jsx)(n.li,{children:"Command descriptions"}),"\n",(0,i.jsx)(n.li,{children:"Rich console formatting"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"version_callback",children:"version_callback()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def version_callback(\n    _ctx: typer.Context,\n    version: bool = typer.Option(None, "--version", "-v", help="Show version and exit")\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Show version and exit."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"_ctx"})," (typer.Context): Typer context (unused)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"version"})," (bool): Whether to show version"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"typer.Exit"}),": Always exits after showing version"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"log_command_start",children:"log_command_start()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def log_command_start() -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Log the start of a command execution."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Logs:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Current timestamp"}),"\n",(0,i.jsx)(n.li,{children:"Program arguments"}),"\n",(0,i.jsx)(n.li,{children:"Command execution start marker"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"suppress_traceback",children:"suppress_traceback()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def suppress_traceback(\n    exc_type: type[BaseException],\n    exc_value: BaseException,\n    _exc_traceback: Any\n) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Suppress traceback output to console."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exc_type"})," (type[BaseException]): Exception type"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exc_value"})," (BaseException): Exception instance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"_exc_traceback"})," (Any): Traceback object (unused)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Logs full traceback to file"}),"\n",(0,i.jsx)(n.li,{children:"Shows minimal error message to console"}),"\n",(0,i.jsx)(n.li,{children:"Ignores KeyboardInterrupt"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"command-functions",children:"Command Functions"}),"\n",(0,i.jsx)(n.h4,{id:"start",children:"start()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\ndef start(\n    env_file: str = typer.Option(None, "--env-file", help="Path to a custom .env file"),\n    config_file: str = typer.Option(None, "--config-file", help="Path to a custom JSON/YAML config file"),\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Starts the interactive book creation process (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"env_file"})," (str, optional): Path to custom .env file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"config_file"})," (str, optional): Path to custom JSON/YAML config file"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," NOT IMPLEMENTED - Shows error message"]}),"\n",(0,i.jsx)(n.h4,{id:"create_book",children:"create_book()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command(name="create-book")\ndef create_book(\n    title: str = typer.Option(\n        None, "--title", "-t",\n        help="Book title (optional - use --auto-title to generate based on content)"\n    ),\n    project_name: str = typer.Option(\n        None, "--project-name", "-p",\n        help="Custom project folder name (spaces allowed, must be empty or non-existent)"\n    ),\n    auto_title: bool = typer.Option(\n        False, "--auto-title",\n        help="Auto-generate title based on content (skipped if title is provided)"\n    ),\n    category: str = typer.Option(\n        "Fiction", "--category", "-c",\n        help="Book category [default: Fiction]"\n    ),\n    project_type: str = typer.Option(\n        "novel", "--project-type",\n        help="Project type: short_story, novella, book, novel, epic [default: novel]"\n    ),\n    genre: str = typer.Option(\n        None, "--genre", "-g",\n        help="Book genre (e.g., fantasy, mystery, romance)"\n    ),\n    description: str = typer.Option(\n        None, "--description", "-d",\n        help="Book description or synopsis"\n    ),\n    language: str = typer.Option(\n        "English", "--language", "-l",\n        help="Book language [default: English]"\n    ),\n    chapters: str = typer.Option(\n        None, "--chapters",\n        help="Number of chapters to generate (e.g., 10, 8-12) (overrides project-type)"\n    ),\n    characters: str = typer.Option(\n        None, "--characters",\n        help="Number of characters to create (e.g., 5, 3-7, 5+)"\n    ),\n    scenes_per_chapter: str = typer.Option(\n        None, "--scenes-per-chapter",\n        help="Scene range per chapter (e.g., 3-6, 4-8, 5) (overrides project-type)"\n    ),\n    target_audience: str = typer.Option(\n        "General", "--target-audience",\n        help="Target audience (e.g., General, Young Adult, Adult, Children) [default: General]",\n    ),\n    worldbuilding: bool = typer.Option(\n        False, "--worldbuilding",\n        help="Enable worldbuilding for the book"\n    ),\n    config_file: str = typer.Option(\n        None, "--config-file",\n        help="Path to configuration file (.env, .yaml, .yml, or .json)"\n    ),\n    log_file: str = typer.Option(\n        None, "--log-file",\n        help="Path to log file"\n    ),\n    log_level: str = typer.Option(\n        "INFO", "--log-level",\n        help="Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL) [default: INFO]"\n    ),\n    mock: bool = typer.Option(\n        False, "--mock",\n        help="Use mock LLM provider for testing"\n    ),\n    generate_concept: bool = typer.Option(\n        False, "--generate-concept",\n        help="Generate book concept"\n    ),\n    generate_outline: bool = typer.Option(\n        False, "--generate-outline",\n        help="Generate book outline"\n    ),\n    generate_characters: bool = typer.Option(\n        False, "--generate-characters",\n        help="Generate character profiles"\n    ),\n    generate_worldbuilding: bool = typer.Option(\n        False, "--generate-worldbuilding",\n        help="Generate worldbuilding details (requires --worldbuilding)"\n    ),\n    write_chapters: bool = typer.Option(\n        False, "--write-chapters",\n        help="Write all chapters"\n    ),\n    format_book: bool = typer.Option(\n        False, "--format-book",\n        help="Format the book into final output"\n    ),\n    user: str | None = typer.Option(\n        None, "--user",\n        help="User identifier for LiteLLM tags (spaces allowed)"\n    ),\n    all: bool = typer.Option(\n        False, "--all",\n        help="Perform all generation steps (concept, outline, characters, worldbuilding, chapters, formatting)",\n    ),\n) -> int\n'})}),"\n",(0,i.jsx)(n.p,{children:"Create a new book using command-line arguments without interactive prompts."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"title"})," (str, optional): Book title"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str, optional): Custom project folder name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"auto_title"})," (bool): Auto-generate title based on content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"category"}),' (str): Book category, default "Fiction"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_type"}),' (str): Project type, default "novel"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"genre"})," (str, optional): Book genre"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"description"})," (str, optional): Book description or synopsis"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"language"}),' (str): Book language, default "English"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapters"})," (str, optional): Number of chapters to generate"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"characters"})," (str, optional): Number of characters to create"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"scenes_per_chapter"})," (str, optional): Scene range per chapter"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"target_audience"}),' (str): Target audience, default "General"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"worldbuilding"})," (bool): Enable worldbuilding"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"config_file"})," (str, optional): Path to configuration file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"log_file"})," (str, optional): Path to log file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"log_level"}),' (str): Log level, default "INFO"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"mock"})," (bool): Use mock LLM provider"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"generate_concept"})," (bool): Generate book concept"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"generate_outline"})," (bool): Generate book outline"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"generate_characters"})," (bool): Generate character profiles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"generate_worldbuilding"})," (bool): Generate worldbuilding details"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"write_chapters"})," (bool): Write all chapters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"format_book"})," (bool): Format the book into final output"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"user"})," (str, optional): User identifier for LiteLLM tags"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"all"})," (bool): Perform all generation steps"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"int"}),": Exit code (0 = success, >0 = error)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exit Codes:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"}),": Success"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1"}),": Runtime error or unexpected error"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"2"}),": Invalid input (ValueError)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3"}),": Import error (missing dependencies)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"5"}),": Book creation failed"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"book_stats",children:"book_stats()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command(name="book-stats")\ndef book_stats(\n    project_name: str = typer.Option(..., "--project-name", help="Project name to display statistics for"),\n    show_logs: bool = typer.Option(False, "--show-logs", help="Display the last 20 lines of the log file"),\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Displays statistics for a book project (NON-INTERACTIVE - RECOMMENDED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project to analyze"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"show_logs"})," (bool): Whether to display recent log entries"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Features:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Project metadata display"}),"\n",(0,i.jsx)(n.li,{children:"Chapter status overview"}),"\n",(0,i.jsx)(n.li,{children:"Dynamic questions and answers"}),"\n",(0,i.jsx)(n.li,{children:"Automatic log file creation and logging"}),"\n",(0,i.jsx)(n.li,{children:"Optional log file viewing (last 20 lines)"}),"\n",(0,i.jsx)(n.li,{children:"Error handling for missing projects"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Logging:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Automatically logs all statistics to project log file"}),"\n",(0,i.jsx)(n.li,{children:"Creates log file if it doesn't exist"}),"\n",(0,i.jsx)(n.li,{children:"Timestamped entries for tracking"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FileNotFoundError"}),": When project is not found"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ValueError"}),": When project data is invalid"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"generate_title",children:"generate_title()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\ndef generate_title(\n    project_name: str = typer.Option(..., prompt="Project name"),\n    config_file: str = typer.Option(\n        None, "--config-file",\n        help="Path to configuration file"\n    ),\n    mock: bool = typer.Option(\n        False, "--mock",\n        help="Use mock LLM provider for testing"\n    ),\n    user: str | None = typer.Option(\n        None, "--user",\n        help="User identifier for LiteLLM tags (spaces allowed)"\n    ),\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generate a better title for an existing project based on its content."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the existing project"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"config_file"})," (str, optional): Path to configuration file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"mock"})," (bool): Whether to use mock LLM provider"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"user"})," (str, optional): User identifier for LiteLLM tags"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Project must exist with project_data.json"}),"\n",(0,i.jsx)(n.li,{children:'Auto-title must be enabled or title must be "Untitled"'}),"\n",(0,i.jsx)(n.li,{children:"Sufficient content must be available (chapters, characters, or outline)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FileNotFoundError"}),": When project is not found"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ValueError"}),": When project data is invalid"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"resume",children:"resume()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\ndef resume(\n    project_name: str = typer.Option(..., prompt="Project name to resume"),\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Resumes a project from the last checkpoint (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project to resume"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Process:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Loads existing project data"}),"\n",(0,i.jsx)(n.li,{children:"Checks for missing content (outline, characters, worldbuilding)"}),"\n",(0,i.jsx)(n.li,{children:"Generates missing content in order"}),"\n",(0,i.jsx)(n.li,{children:"Continues writing chapters from last checkpoint"}),"\n",(0,i.jsx)(n.li,{children:"Formats book if all chapters exist"}),"\n",(0,i.jsx)(n.li,{children:"Generates title if auto-title is enabled"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," PARTIALLY IMPLEMENTED - Basic functionality available"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"FileNotFoundError"}),": When project is not found"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ValueError"}),": When project data is invalid"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"async-command-functions",children:"Async Command Functions"}),"\n",(0,i.jsx)(n.h4,{id:"concept",children:"concept()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\nasync def concept(\n    project_name: str = typer.Option(..., prompt="Project name")\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generates a book concept (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," NOT IMPLEMENTED - Placeholder function"]}),"\n",(0,i.jsx)(n.h4,{id:"outline",children:"outline()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\nasync def outline(\n    project_name: str = typer.Option(..., prompt="Project name")\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generates a book outline (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," NOT IMPLEMENTED - Placeholder function"]}),"\n",(0,i.jsx)(n.h4,{id:"characters",children:"characters()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\nasync def characters(\n    project_name: str = typer.Option(..., prompt="Project name")\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generates character profiles (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," NOT IMPLEMENTED - Placeholder function"]}),"\n",(0,i.jsx)(n.h4,{id:"worldbuilding",children:"worldbuilding()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\nasync def worldbuilding(\n    project_name: str = typer.Option(..., prompt="Project name")\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generates worldbuilding details (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," NOT IMPLEMENTED - Placeholder function"]}),"\n",(0,i.jsx)(n.h4,{id:"write",children:"write()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\nasync def write(\n    project_name: str = typer.Option(..., prompt="Project name"),\n    chapter_number: int = typer.Option(..., prompt="Chapter number"),\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Writes a specific chapter, with review process (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapter_number"})," (int): Chapter number to write"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," NOT IMPLEMENTED - Placeholder function"]}),"\n",(0,i.jsx)(n.h4,{id:"edit",children:"edit()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\nasync def edit(\n    project_name: str = typer.Option(..., prompt="Project name"),\n    chapter_number: int = typer.Option(..., prompt="Chapter number to edit"),\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Edits and refines a specific chapter (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"chapter_number"})," (int): Chapter number to edit"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," NOT IMPLEMENTED - Placeholder function"]}),"\n",(0,i.jsx)(n.h4,{id:"format",children:"format()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\nasync def format(\n    project_name: str = typer.Option(..., prompt="Project name"),\n    _output_format: str = typer.Option(\n        None, "--output-format",\n        help="Output format (md or pdf)"\n    ),\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Formats the entire book into a single Markdown or PDF file (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (str): Name of the project"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"_output_format"})," (str, optional): Output format (currently unused)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," PARTIALLY IMPLEMENTED - Basic formatting available"]}),"\n",(0,i.jsx)(n.h4,{id:"research",children:"research()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\nasync def research(\n    query: str = typer.Option(..., prompt="Research query")\n) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Performs web research on a given query (ADVANCED - NOT FULLY SUPPORTED)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"query"})," (str): Research query string"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," NOT IMPLEMENTED - Placeholder function"]}),"\n",(0,i.jsx)(n.h2,{id:"global-variables",children:"Global Variables"}),"\n",(0,i.jsx)(n.h3,{id:"console",children:"console"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"console: Console\n"})}),"\n",(0,i.jsx)(n.p,{children:"Rich console instance for formatted output."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Type:"})," ",(0,i.jsx)(n.code,{children:"rich.console.Console"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Colored output"}),"\n",(0,i.jsx)(n.li,{children:"Progress bars"}),"\n",(0,i.jsx)(n.li,{children:"Tables and panels"}),"\n",(0,i.jsx)(n.li,{children:"Error messages"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"project_manager",children:"project_manager"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"project_manager: ProjectManagerAgent\n"})}),"\n",(0,i.jsx)(n.p,{children:"Global project manager instance."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Type:"})," ",(0,i.jsx)(n.code,{children:"libriscribe2.agents.project_manager.ProjectManagerAgent"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Project creation and management"}),"\n",(0,i.jsx)(n.li,{children:"Content generation coordination"}),"\n",(0,i.jsx)(n.li,{children:"State management"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"app_log_file",children:"app_log_file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"app_log_file: Path\n"})}),"\n",(0,i.jsx)(n.p,{children:"Path to the application log file."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Type:"})," ",(0,i.jsx)(n.code,{children:"pathlib.Path"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Format:"})," ",(0,i.jsx)(n.code,{children:"logs/libriscribe_{timestamp}.log"})]}),"\n",(0,i.jsx)(n.h2,{id:"type-annotations-summary",children:"Type Annotations Summary"}),"\n",(0,i.jsx)(n.h3,{id:"common-parameter-types",children:"Common Parameter Types"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# String parameters\ntitle: str\nproject_name: str\nconfig_file: str\nlog_file: str\ngenre: str\ndescription: str\nlanguage: str\n\n# Optional string parameters\ntitle: str = typer.Option(None, ...)\nconfig_file: str = typer.Option(None, ...)\nuser: str | None = typer.Option(None, ...)\n\n# Boolean parameters\nauto_title: bool = typer.Option(False, ...)\nworldbuilding: bool = typer.Option(False, ...)\nmock: bool = typer.Option(False, ...)\n\n# String parameters with defaults\ncategory: str = typer.Option("Fiction", ...)\nlanguage: str = typer.Option("English", ...)\nlog_level: str = typer.Option("INFO", ...)\n\n# Required parameters with prompts\nproject_name: str = typer.Option(..., prompt="Project name")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"return-types",children:"Return Types"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Void functions\n-> None\n\n# Exit code functions\n-> int\n\n# Path functions\n-> Path\n"})}),"\n",(0,i.jsx)(n.h3,{id:"exception-types",children:"Exception Types"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Standard exceptions\nFileNotFoundError\nValueError\nImportError\nRuntimeError\n\n# Typer exceptions\ntyper.Exit\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage-patterns",children:"Usage Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"basic-command-structure",children:"Basic Command Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\ndef command_name(\n    param: str = typer.Option(default, "--flag", help="Description")\n) -> ReturnType:\n    """Command description."""\n    # Implementation\n'})}),"\n",(0,i.jsx)(n.h3,{id:"async-command-structure",children:"Async Command Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.command()\nasync def async_command(\n    param: str = typer.Option(..., prompt="Prompt text")\n) -> None:\n    """Async command description."""\n    # Async implementation\n'})}),"\n",(0,i.jsx)(n.h3,{id:"error-handling-pattern",children:"Error Handling Pattern"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'try:\n    # Command logic\n    return 0  # Success\nexcept ValueError as e:\n    console.print(f"[red]\u274c Invalid input: {e}[/red]")\n    return 2  # Invalid input\nexcept ImportError as e:\n    console.print(f"[red]\u274c Import Error: {e}[/red]")\n    return 3  # Missing dependencies\nexcept Exception as e:\n    logger.exception("Unexpected error")\n    console.print(f"[red]\u274c Unexpected error: {e}[/red]")\n    return 1  # General error\n'})}),"\n",(0,i.jsx)(n.h3,{id:"logging-pattern",children:"Logging Pattern"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def command_function():\n    """Command with logging."""\n    log_command_start()  # Log command execution start\n\n    try:\n        # Command logic\n        logger.info("Command completed successfully")\n    except Exception as e:\n        logger.exception("Command failed")\n        raise\n'})}),"\n",(0,i.jsx)(n.h2,{id:"import-requirements",children:"Import Requirements"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import asyncio\nimport datetime\nimport logging\nimport sys\nfrom pathlib import Path\nfrom typing import Any\n\nimport typer\nfrom rich.console import Console\nfrom rich.panel import Panel\n\nfrom libriscribe2.agents.project_manager import ProjectManagerAgent\nfrom libriscribe2.settings import MANUSCRIPT_MD_FILENAME, Settings\nfrom libriscribe2.utils.timestamp_utils import format_timestamp_for_filename\n"})}),"\n",(0,i.jsx)(n.h2,{id:"command-registration",children:"Command Registration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Create Typer app\napp = typer.Typer(\n    help="LibriScribe2 - Modern book creation CLI",\n    rich_markup_mode="rich",\n    callback=version_callback,\n    invoke_without_command=True,\n)\n\n# Register commands with decorators\n@app.command()\ndef command_name():\n    pass\n\n@app.command(name="custom-name")\ndef function_name():\n    pass\n'})}),"\n",(0,i.jsx)(n.h2,{id:"entry-point",children:"Entry Point"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'if __name__ == "__main__":\n    # Check if --help is used and no subcommand is specified\n    if "--help" in sys.argv and len(sys.argv) == 2:\n        custom_help()\n        sys.exit(0)\n    else:\n        app()\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var t=r(6540);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);