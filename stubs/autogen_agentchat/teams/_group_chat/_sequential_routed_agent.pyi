"""
This type stub file was generated by pyright.
"""

from typing import Any, Sequence
from autogen_core import MessageContext, RoutedAgent

class FIFOLock:
    """A lock that ensures coroutines acquire the lock in the order they request it."""
    def __init__(self) -> None:
        ...
    
    async def acquire(self) -> None:
        ...
    
    def release(self) -> None:
        ...
    


class SequentialRoutedAgent(RoutedAgent):
    """A subclass of :class:`autogen_core.RoutedAgent` that ensures
    that messages of certain types are processed sequentially
    using a FIFO lock.

    This is useful for agents that need to maintain a strict order of
    processing messages, such as in a group chat scenario.



    Args:

        description (str): The description of the agent.
        sequential_message_types (Sequence[Type[Any]]): A sequence of message types that should be
            processed sequentially. If a message of one of these types is received,
            the agent will acquire a FIFO lock to ensure that it is processed
            before any later messages that are also one of these types.
    """
    def __init__(self, description: str, sequential_message_types: Sequence[type[Any]]) -> None:
        ...
    
    async def on_message_impl(self, message: Any, ctx: MessageContext) -> Any | None:
        ...
    
